---
- name: prepare the image metadata command
  set_fact:
    image_properties: "{{ image_metadata | map('regex_replace', '^(.*)$', '--image-property \\1') | join(' ') }}"
  when: image_metadata is defined

- name: set guest boot volume image metadata
  shell: |
    openstack volume set {{ volumes[0] }} {{ image_properties }}
  when: hw_machine_type is defined
  environment:
    OS_CLOUD: "{{ openstack_cloud }}"

- name: Get volume information
  openstack.cloud.volume_info:
    cloud: "{{ dst_cloud }}"
    name: "{{ vm_name }}-sda"
  register: volume_result

- name: Set volume UUID as a fact
  set_fact:
    volume_uuid: "{{ volume_result.volumes[0].id }}"

- name: Create VM in Openstack
  register: instance_uuid
  openstack.cloud.server:
    cloud: "{{ dst_cloud }}"
    state: present
    name: "{{ vm_name }}"
    nics: "{{ nics }}"
    volumes: "{{ vm_name }}-sda"
    boot_volume: "{{ vm_name }}-sda"
    security_groups: "{{ security_groups }}"
    flavor: "{{ flavor_name_or_uuid }}"
  when: used_mapped_networks|default(true)|bool

- name: Create VM in Openstack
  register: instance_uuid
  openstack.cloud.server:
    cloud: "{{ dst_cloud }}"
    state: present
    name: "{{ vm_name }}"
    network: "{{ openstack_private_network }}"
    boot_volume: "{{ vm_name }}-sda"
    security_groups: "{{ security_groups }}"
    flavor: "{{ flavor_name_or_uuid }}"
    userdata: |
      #!/bin/sh
      dhclient
  when: not used_mapped_networks|default(true)|bool

- name: Set fact for instance_uuid
  set_fact:
    instance_uuid: "{{ instance_uuid.server.id }}"